
TRACELIB
{
  CanvasModule
  {
    Canvas
    {
      TEXMAP
      {
        Name
        Image
        Buffer
        Width
        Height
      }
      CalcOffset
      PutPixel
      GetPixel
      PutColor
      GetColor
      PutTexel
      GetTexel
      CanvasFolder
      ComposeURL
      LoadFromFile
      LoadFromDB
      SaveToDB
      Capture
      Create
      Fill
    }
  }
  ColorModule
  {
    Color {
      Names
      {
        BLACK
        GOLD
        MEDIUMFORESTGREEN
        MIDNIGHTBLUE
        ORANGE1
        ORANGE2
        COPPER
        GREEN1
        BLUE
        RED
        GREEN
        PURPLE1
        PURPLE2
      }
      Fix
      Make
      Parse
      Compose
      ComposeVGA
      ComposeHTML
      Clamp
      Clone
    }
  }
  CommandModule
  {
    Command
    {
      Parse
    }
  }
  ConstantsModule
  {
    Contants
    {
      MAXNUMCOLORREGS
      MAXCOLORREGVAL
      MAXCOLS
      MAXROWS
      MAXSCREENWIDTH
      MAXSCREENHEIGHT
      MAXBYTESPERSCAN
      MAXPALETTECOLORS
      MAX256PALETTECOLORS
      BIG
      EPSILON
      MAXRECURSELEVEL
      MAXLINEWIDTH
    }
  }
  ErrorModule
  {
    Error
    {
      CompletionCode
      {
        NoError
        EBadParms
        EFileNotFound
        EOpeningFile
        EReadFileHdr
        ENotPCXFile
        ECorrupt
        EWrtFileHdr
        EReadScanLine
        EWrtScanLine
        EPCCFile
        EGraphics
        ENoMemory
        EWrtExtPal
        ENotGIFFile
        EReadRowNum
        EReadData
      }
      CompletionMsg
      {
        0
        1
        2
        3
        4
        5
        6
        7
        8
        9
        10
        11
        12
        13
        14
        15
        16
      }
    }
  }
  ObjectModule
  {
    ObjectFactory
    {
      MakeSphere
      MakePlane
      MakeLight
    }
  }
  SpecificObjectModules
  {
    LightModule
    {
      Light
      {
        MakeRay
        GetColor
      }
    }
    PlaneModule
    {
      Plane
      {
        Intersect
        Normal
      }
    }
    SphereModule
    {
      Sphere
      {
        Intersect
        Normal
      }
    }
  }
  PrintModule
  {
    Print
    {
      ComposeVec
      ComposeColor
      List
      SurfaceAttrib
      Light
      Plane
      Sphere
      Stats
      Cache
      Raw
      Line
    }
  }
  ScalarModule
  {
    Scalar 
    {
      ABS
      SGN
      SGNZ
      MIN
      MAX
      SQUARE
      CUBE
    }
  }
  SceneModule
  {
    Scene
    {
      BackGround
      ObjectList
      LightList
      AddObject
      AddLight
      ClearObjectList
      ClearLightList
      Clear
      GetObjectCount
      GetLightCount
      Initialize
    }
  }
  StructModule
  {
    Delegates
    {
      IntersectObject
      NormalObject
      PrintObject
    }
    StructFactory
    {
      VECTOR
      {
        X
        Y
        Z
      }
      COLOR
      {
        Red
        Green
        Blue
        Clamp
        GetHtmlColor
        SetHtmlColor
        GetVGAColor
        SetVGAColor
      }
      RAY
      {
        Origin
        Direction
      }
      VIEWPOINT
      {
        Location
        Direction
        Up
        Right
      }
      DISPLAY
      {
        Width
        Height
        WHalf
        HHalf
        WInv
        HInv
        Make
        Calc
      }
      BACKGROUND
      {
        Colors
        Up
        SolidColor
        GetColor
      }
      ASphere
      {
        Center
        Radius
        Radius2
      }
      APlane
      {
        Normal
        Distance
      }
      ALight
      {
        Center
      }
      ObjectType
      {
        NotAnObject
        Light
        Sphere
        Plane
        Quadric
        Quartic
        Cone
        Ring
        Patch
        Polygon
      }
      AnObject
      {
        Sibling
        Type
        Properties
        Data
        Intersect
        Normal
        Print
      }
      Statistics
      {
        DisplayWidth
        DisplayHeight
        RefelectedRays
        RefractedRays
        ObjectsHit
        ObjectsMissed
        TotalRays
        MaxDepth
        ShadowsHit
        ShadowsMissed
        ShadowRays
        ObjectCount
        SurfaceCount
        LightCount
        StartTime
        StopTime
        StartTracing
        StopTracing
        GetElapsedTime
        GetTotalPixels
      }
    }
  }
  SurfaceModule
  {
    Surface
    {
      SURFACE
      {
        Color
        Ambient
        Diffuse
        Brilliance
        Specular
        Roughness
        Reflection
      }
      SetAttrib
      SetAttribNew
      PushAttrib
      PushAttribNew
      Stack
    }
  }
  TraceModule
  {
    ProgressReportEventArgs
    {
      Cancel
      Count
      Total
    }
    RayTracer
    {
      ProgressReportEvent
      ReportProgress
      SetView
      LookAt
      Screen
      Scan
      MakeTestScene
      Test
      Display
      View
      Stats
      Trace
      Shade
      MakeRay
    }
  }
  VecModule
  {
    Vec
    {
      Fix
      Make
      Clear
      Copy
      Clone
      Add
      Sub
      Negate
      Scale
      Project
      Combine
      Dot
      Cross
      Length
      Normalize
    }
  }
  VGAModule
  {
    VGA
    {
      Clamp
      Scale
      ColorRegister
      {
        Red
        Green
        Blue
      }
      ColorPalette
      {
        Entry
      }
      Palette
      Initialize
    }
  }
  TODO
  {
    MatrixModule 
    {
      Null
      Identity
      Copy
      Clone
      Cat
      TransVector
      TransNormal
      Invert
      Transpose
      Translate
      Scale
      Rotate
      RotateVec
      Camera
    }
    QuadricModule 
    {
      Intersect
      Normal
    }
    QuarticModule 
    {
      Intersect
      Normal
    }
    ConeModule 
    {
      Intersect
      Normal
    }
    RingModule 
    {
      Intersect
      Normal
    }
    PatchModule 
    {
      Intersect
      Normal
    }
    PolygonModule 
    {
      Intersect
      Normal
    }
    ObjectModule
    {
      MakeQuadric
      MakeQuartic
      MakeCone
      MakeRing
      MakePatch
      MakePolygon
    }
  }
}

